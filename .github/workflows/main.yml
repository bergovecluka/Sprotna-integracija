name: GitHub Actions
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Generate-coverage-report:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Checkout code
        uses: actions/checkout@v3
      
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      
      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.13

      - name: Build CMake
        run: cmake -B build -DCMAKE_BUILD_TYPE=Debug

      - name: Compile project
        run: |
          gcc --coverage -c -Wall -Werror main.cpp -lstdc++
          gcc --coverage -o main main.cpp -lstdc++

      - name: Run project
        run: ./main

      - name: Install lcov
        run: sudo apt-get install lcov -y

      - name: Generate coverage report
        run: |
          gcov main.cpp
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info "/usr/*" --output-file coverage-filtered.info
          lcov --list coverage.info

      - name: Generate HTML report
        run: |
          genhtml coverage-filtered.info --output-directory coverage-report

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage-report/

  Generate-release-output:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build C++ program
        run: g++ -o output.exe main.cpp

      - name: Run C++ program and save output
        run: ./output.exe > output.txt

      - name: Upload output artifact
        uses: actions/upload-artifact@v3
        with:
          name: program-output
          path: output.txt        
          